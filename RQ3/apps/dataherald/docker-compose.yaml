version: "3.9"
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "81:80"
    command: uvicorn dataherald.app:app --host 0.0.0.0 --port 80 --log-config log_config.yml --log-level debug --reload
    stdin_open: true
    tty: true
    # volumes:
    #   - ./dataherald:/app/dataherald
    depends_on:
      mongodb:
        condition: service_started
      pgdb:
        condition: service_healthy
        # condition: service_started
    networks:
      - backendnetwork
  frontend:
    build:
      context: ./streamlit-app
      dockerfile: Dockerfile
    ports:
      - "8501:8501"
    depends_on:
      - app
    networks:
      - backendnetwork
  mongodb:
    image: mongo:7.0.4
    restart: always
    # ports:
    #   - 27017:27017
    volumes:
      - ./initdb.d/:/docker-entrypoint-initdb.d/
      # - ./dbdata/mongo_data/data:/data/db/
      # - ./dbdata/mongo_data/db_config:/data/configdb/
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGODB_DB_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGODB_DB_PASSWORD}"
      MONGO_INITDB_DATABASE: "${MONGODB_DB_NAME}"
    networks:
      - backendnetwork
  pgdb:
    image: postgres:16.1
    restart: always
    environment:
        # https://stackoverflow.com/questions/60193781/postgres-with-docker-compose-gives-fatal-role-root-does-not-exist-error/60194261#60194261
        # POSTGRES_USER: postgres
        PGUSER: postgres
        POSTGRES_PASSWORD: "root"
    ports:
        - "5432:5432"
    networks:
        - backendnetwork
    volumes:
        # - ./postgres_data:/var/lib/postgresql/data
        - ./chinook.sql:/docker-entrypoint-initdb.d/chinook.sql
    healthcheck: # https://stackoverflow.com/questions/65115627/safe-ways-to-specify-postgres-parameters-for-healthchecks-in-docker-compose
                 # https://docs.docker.com/compose/compose-file/05-services/#depends_on
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 1s
      timeout: 60s
      retries: 50

networks:
  backendnetwork:
    driver: bridge
